#parse("/velocity/common.vm")
#macro(CLASSTYPE $c)${c.name.toUpperCase()}_RDF_TYPE#end
#macro(METHODTYPE $m)${m.owner.name.toUpperCase()}_${m.name.toUpperCase()}_PROPERTY_TYPE#end
#macro(PRIMITIVE_IN_JENA $type)#if($type=="Integer")Int#elseif($type=="Character")Char#{else}${type}#end#end
#macro(PRIMITIVE_NON_NULL $type)#if($type=="Integer")int#elseif($type=="Character")char#{else}${type.toLowerCase()}#end#end
#macro(PRIMITIVE_FACTORY $type)${type.toUpperCase()}_PRIMITIVE_FACTORY#end

#if(${package})package ${package};#end

import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.util.iterator.*;
import java.util.*;


/**
 *  ${mainClass}Factory
 *
 */
@javax.annotation.Generated("${mainClass}")
public class ${mainClass}Factory
	{
	private Model model=null;
	
	public void setModel(Model model)
		{
		this.model=model;
		}
	public void readModel(String path)
		{
		Model model=ModelFactory.createDefaultModel() ;
		model.read(path) ;
		this.setModel(model);
		}
	public ${mainClass} new${mainClass}()
		{
		if(this.model==null)
			{
			throw new NullPointerException("undefined model");
			}
		return new  ${mainClass}(this.model);
		}
	
	}
